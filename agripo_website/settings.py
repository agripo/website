"""
Django settings for agripo_website project.

Generated by 'django-admin startproject' using Django 1.8.3.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '%%w$#6a@7(@m2u6rup^lob1i49dhl82-iuuex207@t5a%zoypc'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

DOMAIN = "localhost"

ALLOWED_HOSTS = [DOMAIN]

# Some constants for dev/staging and production server
PRODUCTION_SERVER = "www.agripo.net"
STAGING_SERVER = "staging.agripo.net"
SERVER_TYPE_DEVELOPMENT = "DEVELOPMENT"
SERVER_TYPE_PRODUCTION = "PRODUCTION"
SERVER_TYPE_STAGING = "STAGING"

# Finding out which one is running
import sys
SERVER_TYPE = SERVER_TYPE_DEVELOPMENT
for arg in sys.argv:
    if 'liveserver' in arg:
        server = arg.split('=')[1]
        if server == PRODUCTION_SERVER:
            SERVER_TYPE = SERVER_TYPE_PRODUCTION
        elif server == STAGING_SERVER:
            SERVER_TYPE = SERVER_TYPE_STAGING

# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'core',
    'functional_tests',
    # external apps
    'solo',
    'ckeditor',
)

CKEDITOR_UPLOAD_PATH = "uploads/"

CKEDITOR_CONFIGS = {
    'awesome_ckeditor': {
        'toolbar': 'full',
    },
}

MEDIA_ROOT = '{}/media/'.format(BASE_DIR)
MEDIA_URL = '/media/'

# Using some apps only on !production servers
if SERVER_TYPE != SERVER_TYPE_PRODUCTION:
    INSTALLED_APPS += (
        'debug_toolbar',
    )

# Adding the auto-connect backend
AUTHENTICATION_BACKENDS = (
    'core.authentication.NewUserAutoconnectionModelBackend',
    'django.contrib.auth.backends.ModelBackend',
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'agripo_website.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',

                'core.context_processors.cookies_notification',
            ],
        },
    },
]

WSGI_APPLICATION = 'agripo_website.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/
STATIC_URL = '/static/'
if SERVER_TYPE != SERVER_TYPE_DEVELOPMENT:
    STATIC_ROOT = os.path.abspath(os.path.join(BASE_DIR, '../static'))

LOGGING = {
   'version': 1,
   'disable_existing_loggers': False,
   'handlers': {
       'console': {
           'level': 'DEBUG',
           'class': 'logging.StreamHandler',
       },
   },
   'loggers': {
        'django': {
            'handlers': ['console'],
        },
        'core': {
            'handlers': ['console'],
        },
        'lists': {
            'handlers': ['console'],
        },
    },
    'root': {'level': 'INFO'},
}

